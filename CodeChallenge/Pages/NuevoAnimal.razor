@page "/nuevoAnimal"
@using CodeChallenge.Entities.DTOS
@using CodeChallenge.Entities.Enums
@using CodeChallenge.Entities.Responses
@inject CodeChallenge.Interfaces.IZoologicoServicio _zoologicoServicio
@inject IJSRuntime JSRuntime;


<h3>Nuevo Animal</h3>
<EditForm Model="@animalFormDTO" OnValidSubmit="AgregarAnimal">
    <ValidationSummary />
    <div class="form-group row justify-content-center">
        <div class="col-8">
            <div class="card">
                <div class="card-body">
                    <div class="form-group row justify-content-center">
                        <div class="col-2">
                            <label class="col-form-label">Tipo</label>
                        </div>
                        <div class="col-4">
                            <select @bind="@animalFormDTO.Tipo" class="form-control">
                                <option value="">-- Seleccionar Tipo --</option>
                                @foreach (var tipo in _tipos)
                                {
                                    <option value="@tipo">@tipo</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group row justify-content-center">
                        <div class="col-2">
                            <label class="col-form-label">Especie</label>
                        </div>
                        <div class="col-4">
                            <input type="text" class="form-control" @bind="animalFormDTO.Especie" />
                        </div>
                    </div>
                    <div class="form-group row justify-content-center">
                        <div class="col-2">
                            <label class="col-form-label">Edad</label>
                        </div>
                        <div class="col-4">
                            <input type="number" class="form-control" @bind="animalFormDTO.Edad" />
                        </div>
                    </div>
                    <div class="form-group row justify-content-center">
                        <div class="col-2">
                            <label class="col-form-label">Lugar de Origen</label>
                        </div>
                        <div class="col-4">
                            <input type="text" class="form-control" @bind="animalFormDTO.LugarOrigen" />
                        </div>
                    </div>
                    <div class="form-group row justify-content-center">
                        <div class="col-2">
                            <label class="col-form-label">Peso del animal (Kg)</label>
                        </div>
                        <div class="col-4">
                            <input type="number" class="form-control" @bind="animalFormDTO.Peso" />
                        </div>
                    </div>
                    @if (animalFormDTO.Tipo == AnimalTiposEnum.Carnivoro || animalFormDTO.Tipo == AnimalTiposEnum.Reptil)
                    {
                        <div class="form-group row justify-content-center">
                            <div class="col-2">
                                <label class="col-form-label">Porcentaje de comida por peso %</label>
                            </div>
                            <div class="col-4">
                                <input type="number" class="form-control" @bind="animalFormDTO.Porcentaje" />
                            </div>
                        </div>                      
                    }
                    @if (animalFormDTO.Tipo == AnimalTiposEnum.Herbivoro)
                    {
                        <div class="form-group row justify-content-center">
                            <div class="col-2">
                                <label class="col-form-label">Kilos extras de comida por día (Kg)</label>
                            </div>
                            <div class="col-4">
                                <input type="number" class="form-control" @bind="animalFormDTO.Kilos" />
                            </div>
                        </div>                      
                    }
                    @if (animalFormDTO.Tipo == AnimalTiposEnum.Reptil)
                    {
                        <div class="form-group row justify-content-center">
                            <div class="col-2">
                                <label class="col-form-label">Cambio de Piel (días)</label>
                            </div>
                            <div class="col-4">
                                <input type="number" class="form-control" @bind="animalFormDTO.DiasCambioDePiel" />
                            </div>
                        </div>
                    }
                    <div class="form-group row">
                        <div class="col-12 d-flex justify-content-center">
                            <button type="button" class="btn btn-success" @onclick="AgregarAnimal">Agregar</button>
                        </div>
                    </div>
                    @if (errorMessages.Any())
                    {
                        <div class="alert alert-danger" role="alert">
                            @foreach (var error in errorMessages)
                            {
                                <p>@error</p>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {
    private List<AnimalTiposEnum> _tipos;
    protected AnimalFormDTO animalFormDTO = new AnimalFormDTO();
    private List<string> errorMessages = new List<string>();
    private double totalAlimentoConsumido;

    private void MostrarAlerta()
    {
        JSRuntime.InvokeVoidAsync("alert", "Ingresando este animal, se estan excediendo los 1500kg de comida al mes.");
    }

    private void AgregarAnimal()
    {
        errorMessages.Clear();
        totalAlimentoConsumido = 0.0;
        HandleResponse(_zoologicoServicio.AgregarAnimal(animalFormDTO));          

    }

    protected override Task OnInitializedAsync()
    {
        _tipos = _zoologicoServicio.ObtenerTiposAnimales();
        return base.OnInitializedAsync();
    }

    private void HandleResponse(ServiceResponse serviceResponse)
    {
        if (!serviceResponse.ValidationResult.IsValid)
        {
            foreach (var error in serviceResponse.ValidationResult.Errors)
            {
                errorMessages.Add(error.ErrorMessage);
            }
        }
        else if (serviceResponse.ValidationResult.IsValid && !serviceResponse.Success)
        {
            MostrarAlerta();
        }
        else if (serviceResponse.Success)
        {
            //Reseteo form si todo se hizo ok
            animalFormDTO = new AnimalFormDTO();
        }
    }
}
